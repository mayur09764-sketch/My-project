
#include <iostream>
#include <string>

using namespace std;

struct Account {
    string accountNumber;
    string name;
    double balance;
};

const int MAX_ACCOUNTS = 100;
Account accounts[MAX_ACCOUNTS];
int accountCount = 0;

void createAccount() {
    if (accountCount >= MAX_ACCOUNTS) {
        cout << "Account limit reached. Cannot create more accounts." << endl;
        return;
    }

    Account newAccount;
    cout << "Enter Account Number: ";
    cin >> newAccount.accountNumber;
    cout << "Enter Name: ";
    cin.ignore();
    getline(cin, newAccount.name);
    newAccount.balance = 0.0;

    accounts[accountCount++] = newAccount;
    cout << "Account created successfully!" << endl;
}

void depositMoney() {
    string accountNumber;
    double amount;
    cout << "Enter Account Number: ";
    cin >> accountNumber;

    for (int i = 0; i < accountCount; ++i) {
        if (accounts[i].accountNumber == accountNumber) {
            cout << "Enter Amount to Deposit: ";
            cin >> amount;
            if (amount > 0) {
                accounts[i].balance += amount;
                cout << "Deposit successful! New Balance: $" << accounts[i].balance << endl;
            } else {
                cout << "Invalid amount!" << endl;
            }
            return;
        }
    }
    cout << "Account not found!" << endl;
}

void withdrawMoney() {
    string accountNumber;
    double amount;
    cout << "Enter Account Number: ";
    cin >> accountNumber;

    for (int i = 0; i < accountCount; ++i) {
        if (accounts[i].accountNumber == accountNumber) {
            cout << "Enter Amount to Withdraw: ";
            cin >> amount;
            if (amount > 0 && amount <= accounts[i].balance) {
                accounts[i].balance -= amount;
                cout << "Withdrawal successful! New Balance: $" << accounts[i].balance << endl;
            } else {
                cout << "Invalid amount or insufficient balance!" << endl;
            }
            return;
        }
    }
    cout << "Account not found!" << endl;
}

void checkBalance() {
    string accountNumber;
    cout << "Enter Account Number: ";
    cin >> accountNumber;

    for (int i = 0; i < accountCount; ++i) {
        if (accounts[i].accountNumber == accountNumber) {
            cout << "Account Name: " << accounts[i].name << endl;
            cout << "Balance: $" << accounts[i].balance << endl;
            return;
        }
    }
    cout << "Account not found!" << endl;
}

void displayMenu() {
    int choice;
    cout << "\n--- Simple Banking System ---" << endl;
    cout << "1. Create Account" << endl;
    cout << "2. Deposit Money" << endl;
    cout << "3. Withdraw Money" << endl;
    cout << "4. Check Balance" << endl;
    cout << "5. Exit" << endl;
    cout << "Enter your choice: ";
    cin >> choice;

    switch (choice) {
        case 1: createAccount(); break;
        case 2: depositMoney(); break;
        case 3: withdrawMoney(); break;
        case 4: checkBalance(); break;
        case 5: exit(0);
        default: cout << "Invalid choice. Please try again." << endl;
    }
}

int main() {
    while (true) {
        displayMenu();
    }
    return 0;
}
